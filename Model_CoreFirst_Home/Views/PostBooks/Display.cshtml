@model Model_CoreFirst_Home.Models.Book

@{
    ViewData["Title"] = Model.Title;
}

<div class="container mt-4">
    <h2 class="mb-4">貼文詳細內容</h2>

    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    @if (!string.IsNullOrEmpty(Model.Photo))
                    {
                        <img src="~/BookPhotos/@Model.Photo"
                             alt="@Model.Title"
                             class="img-fluid rounded mb-3" />
                    }
                </div>
                <div class="col-md-8">
                    <dl class="row">
                        <dt class="col-sm-3">
                            @Html.DisplayNameFor(model => model.Title)
                        </dt>
                        <dd class="col-sm-9">
                            @Html.DisplayFor(model => model.Title)
                        </dd>

                        <dt class="col-sm-3">
                            @Html.DisplayNameFor(model => model.Author)
                        </dt>
                        <dd class="col-sm-9">
                            @Html.DisplayFor(model => model.Author)
                        </dd>

                        <dt class="col-sm-3">
                            @Html.DisplayNameFor(model => model.TimeStamp)
                        </dt>
                        <dd class="col-sm-9">
                            @Model.TimeStamp.ToString("yyyy/MM/dd HH:mm:ss")
                        </dd>

                        <dt class="col-sm-3">
                            @Html.DisplayNameFor(model => model.Description)
                        </dt>
                        <dd class="col-sm-9">
                            <div class="border rounded p-3 bg-light">
                                @Html.DisplayFor(model => model.Description)
                            </div>
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <div class="btn-group">
                <a asp-action="Edit"
                   asp-route-id="@Model?.BookID"
                   class="btn btn-primary">
                    <i class="fas fa-edit"></i> 編輯貼文
                </a>
                <a asp-action="Delete"
                   asp-route-id="@Model?.BookID"
                   class="btn btn-danger">
                    <i class="fas fa-trash"></i> 刪除貼文
                </a>
                <a asp-action="Index"
                   class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> 返回列表
                </a>
            </div>
        </div>
    </div>

    <!-- 留言區塊 -->
    <div class="card mt-4">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
                <i class="fas fa-comments"></i> 回覆留言
            </h5>
            <button type="button" class="btn btn-primary" id="addReplyBtn">
                <i class="fas fa-reply"></i> 發表回覆
            </button>
        </div>
        <div class="card-body">
            <!-- 使用 ViewComponent 顯示留言區 -->
            @await Component.InvokeAsync("VCReBooks", new { bookId = Model.BookID })
        </div>
    </div>
</div>

<!-- Modal 結構 -->
<div class="modal fade" id="replyModal" tabindex="-1" aria-labelledby="replyModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="replyModalContent">
        </div>
    </div>
</div>

<style>
    .card {
        box-shadow: 0 0.125rem 0.25rem rgba(0,0,0,0.075);
        border: none;
        margin-bottom: 1rem;
    }

    .card-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid rgba(0,0,0,0.125);
    }

    .card-footer {
        background-color: #f8f9fa;
        border-top: 1px solid rgba(0,0,0,0.125);
    }

    .btn {
        padding: 0.375rem 0.75rem;
        font-size: 0.9rem;
    }

        .btn i {
            margin-right: 0.5rem;
        }

    .preserve-whitespace {
        white-space: pre-wrap;
        word-wrap: break-word;
    }

    .delete-reply-form {
        margin: 0;
        padding: 0;
    }

    .modal-content {
        border: none;
        border-radius: 0.5rem;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function () {
            // 處理新增回覆按鈕點擊
            $('#addReplyBtn').click(function () {
                $.get('/RePostBooks/Create', { bookId: '@Model.BookID' })
                    .done(function (data) {
                        $('#replyModalContent').html(data);
                        $('#replyModal').modal('show');

                        // 在模態框中綁定表單提交事件
                        $('#replyForm').on('submit', function (e) {
                            e.preventDefault();

                            $.ajax({
                                url: $(this).attr('action'),
                                type: 'POST',
                                data: $(this).serialize(),
                                success: function (response) {
                                    if (response.success) {
                                        $('#replyModal').modal('hide');
                                        // 重新載入留言區塊
                                        Swal.fire({
                                            icon: 'success',
                                            title: '成功',
                                            text: '回覆已新增',
                                            timer: 1500,
                                            showConfirmButton: false
                                        }).then(() => {
                                            location.reload();
                                        });
                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: '錯誤',
                                            text: response.message || '新增回覆失敗'
                                        });
                                    }
                                },
                                error: function () {
                                    Swal.fire({
                                        icon: 'error',
                                        title: '錯誤',
                                        text: '新增回覆失敗，請稍後再試'
                                    });
                                }
                            });
                        });
                    })
                    .fail(function () {
                        Swal.fire({
                            icon: 'error',
                            title: '錯誤',
                            text: '載入表單失敗，請稍後再試'
                        });
                    });
            });

            // 處理回覆刪除
            $(document).on('click', '.delete-reply', function(e) {
                e.preventDefault();
                const replyId = $(this).data('id');
                const token = $('input[name="__RequestVerificationToken"]').val();

                Swal.fire({
                    title: '確定要刪除嗎？',
                    text: '此操作無法還原！',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: '是的，刪除！',
                    cancelButtonText: '取消'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: `/RePostBooks/Delete/${replyId}`,
                            type: 'POST',
                            data: {
                                __RequestVerificationToken: token
                            },
                            success: function(response) {
                                // 不管回應是什麼，只要 HTTP 狀態是 200，就視為成功
                                Swal.fire({
                                    icon: 'success',
                                    title: '成功',
                                    text: '回覆已成功刪除',
                                    timer: 1500,
                                    showConfirmButton: false
                                }).then(() => {
                                    location.reload(); // 成功提示後再重新載入頁面
                                });
                            },
                            error: function(xhr, status, error) {
                                // 只有在網路錯誤或服務器錯誤時才顯示錯誤信息
                                Swal.fire({
                                    icon: 'error',
                                    title: '錯誤',
                                    text: '刪除失敗，請稍後再試'
                                });
                            }
                        });
                    }
                });
            });

            // 監聽模態框事件
            $('#replyModal').on('hidden.bs.modal', function () {
                $('#replyModalContent').html('');
            });

            // TempData 處理
        @if (TempData["Success"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'success',
                        title: '成功',
                        text: '@TempData["Success"]',
                        timer: 1500,
                        showConfirmButton: false
                    });
            </text>
        }

        @if (TempData["Error"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'error',
                        title: '錯誤',
                        text: '@TempData["Error"]'
                    });
            </text>
        }
        });
    </script>
}