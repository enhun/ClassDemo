@model Model_CoreFirst_Home.Models.Book

@{
    ViewData["Title"] = Model.Title;
}

<div class="container mt-4">
    <h2 class="mb-4">貼文詳細內容</h2>

    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    @if (!string.IsNullOrEmpty(Model.Photo))
                    {
                        <img src="~/BookPhotos/@Model.Photo"
                             alt="@Model.Title"
                             class="img-fluid rounded mb-3" />
                    }
                </div>
                <div class="col-md-8">
                    <dl class="row">
                        <dt class="col-sm-3">
                            @Html.DisplayNameFor(model => model.Title)
                        </dt>
                        <dd class="col-sm-9">
                            @Html.DisplayFor(model => model.Title)
                        </dd>

                        <dt class="col-sm-3">
                            @Html.DisplayNameFor(model => model.Author)
                        </dt>
                        <dd class="col-sm-9">
                            @Html.DisplayFor(model => model.Author)
                        </dd>

                        <dt class="col-sm-3">
                            @Html.DisplayNameFor(model => model.TimeStamp)
                        </dt>
                        <dd class="col-sm-9">
                            @Model.TimeStamp.ToString("yyyy/MM/dd HH:mm:ss")
                        </dd>

                        <dt class="col-sm-3">
                            @Html.DisplayNameFor(model => model.Description)
                        </dt>
                        <dd class="col-sm-9">
                            <div class="border rounded p-3 bg-light">
                                @Html.DisplayFor(model => model.Description)
                            </div>
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <div class="btn-group">
                <a asp-action="Edit"
                   asp-route-id="@Model?.BookID"
                   class="btn btn-primary">編輯貼文</a>
                <!-- 修改：添加刪除貼文按鈕 -->
                <a asp-action="Delete"
                   asp-route-id="@Model?.BookID"
                   class="btn btn-danger">刪除貼文</a>
                <a asp-action="Index"
                   class="btn btn-secondary">返回列表</a>
            </div>
        </div>
    </div>

    <!-- 添加留言區塊 -->
    <div class="card mt-4">
        <div class="card-header bg-light">
            <h4 class="mb-0">留言區</h4>
        </div>
        <div class="card-body">
            <!-- 新增留言表單 -->
            <form asp-controller="PostBooks" asp-action="AddReply" method="post" class="mb-4">
                @Html.AntiForgeryToken() <!-- 修改：添加 AntiForgeryToken -->
                <input type="hidden" name="BookID" value="@Model.BookID" />
                <div class="mb-3">
                    <label class="form-label">留言者</label>
                    <input type="text" name="Author" class="form-control" required maxlength="20"
                           placeholder="請輸入您的名字" />
                </div>
                <div class="mb-3">
                    <label class="form-label">留言內容</label>
                    <textarea name="Description" class="form-control" rows="3" required
                              placeholder="寫下您的想法..."></textarea>
                </div>
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-paper-plane"></i> 發表留言
                </button>
            </form>

            <!-- 顯示留言列表 -->
            <h5 class="mt-4 mb-3">
                <i class="fas fa-comments"></i>
                所有留言 (@(Model.ReBooks?.Count ?? 0))
            </h5>

            @if (Model.ReBooks != null && Model.ReBooks.Any())
            {
                foreach (var reply in Model.ReBooks.OrderByDescending(r => r.TimeStamp))
                {
                    <!-- 修改：重構留言卡片結構 -->
                    <div class="card mb-3 border-left-primary shadow-sm">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <div>
                                    <h6 class="mb-0">
                                        <i class="fas fa-user"></i> @reply.Author
                                    </h6>
                                    <small class="text-muted">
                                        <i class="fas fa-clock"></i>
                                        @reply.TimeStamp.ToString("yyyy/MM/dd HH:mm:ss")
                                    </small>
                                </div>

                                <!-- 修改：改進刪除按鈕樣式和確認對話框 -->
                                <form asp-action="DeleteReply" method="post" class="delete-reply-form">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="replyId" value="@reply.ReBookID" />
                                    <input type="hidden" name="bookId" value="@Model.BookID" />
                                    <button type="submit" class="btn btn-outline-danger btn-sm"
                                            onclick="return confirm('確定要刪除這則留言嗎？');">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </form>
                            </div>
                            <!-- 修改：更好的留言內容顯示 -->
                            <div class="mt-2 preserve-whitespace">
                                @reply.Description
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-info" role="alert">
                    <i class="fas fa-info-circle"></i>
                    目前還沒有留言，成為第一個留言的人吧！
                </div>
            }
        </div>
    </div>
</div>

<!-- 修改：更新和添加新的樣式 -->
<style>
    .border-left-primary {
        border-left: 4px solid #007bff;
    }

    .preserve-whitespace {
        white-space: pre-wrap;
        word-wrap: break-word;
    }

    .shadow-sm {
        box-shadow: 0 .125rem .25rem rgba(0,0,0,.075) !important;
    }

    .delete-reply-form {
        margin: 0;
        padding: 0;
    }
</style>

<!-- 修改：添加 JavaScript 區段 -->
@section Scripts {
    <script>
        $(document).ready(function () {
            // 處理刪除留言
            $('.delete-reply-btn').click(function (e) {
                e.preventDefault();
                const form = $(this).closest('form');
                const replyId = form.data('reply-id');

                Swal.fire({
                    title: '確定要刪除這則留言嗎？',
                    text: "刪除後將無法復原！",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: '是的，刪除',
                    cancelButtonText: '取消'
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.submit();
                    }
                });
            });

            // 如果有 TempData 訊息，顯示提示
        @if (TempData["Success"] != null)
        {
            <text>
                    Swal.fire({
                        title: '成功！',
                        text: '@TempData["Success"]',
                        icon: 'success',
                        timer: 2000,
                        showConfirmButton: false
                    });
            </text>
        }

        @if (TempData["Error"] != null)
        {
            <text>
                    Swal.fire({
                        title: '錯誤！',
                        text: '@TempData["Error"]',
                        icon: 'error'
                    });
            </text>
        }
        });

        $(document).ready(function () {
            $('#addReplyBtn').click(function () {
                const bookId = '@Model.BookID';
                loadReplyForm(bookId);
            });

            function loadReplyForm(bookId) {
                $.get(`/RePostBooks/Create?bookId=${bookId}`, function (data) {
                    $('#replyModalContent').html(data);
                    $('#replyModal').modal('show');
                });
            }

            $(document).on('click', '#submitReply', function () {
                const form = $('#createReplyForm');
                const data = {
                    BookID: form.find('[name="BookID"]').val(),
                    Author: form.find('[name="Author"]').val(),
                    Description: form.find('[name="Description"]').val()
                };

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    success: function (response) {
                        if (response.success) {
                            addReplyToList(response.data);
                            $('#replyModal').modal('hide');

                            Swal.fire({
                                title: '成功！',
                                text: '回覆已發布',
                                icon: 'success',
                                timer: 1500
                            });
                        } else {
                            Swal.fire({
                                title: '錯誤！',
                                text: response.errors.join('\n'),
                                icon: 'error'
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: '錯誤！',
                            text: '發生錯誤，請稍後再試',
                            icon: 'error'
                        });
                    }
                });
            });

            function addReplyToList(reply) {
                const replyHtml = `
                    <div class="card mb-3 border-left-primary shadow-sm">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <div>
                                    <h6 class="mb-0">
                                        <i class="fas fa-user"></i> ${reply.author}
                                    </h6>
                                    <small class="text-muted">
                                        <i class="fas fa-clock"></i>
                                        ${reply.timestamp}
                                    </small>
                                </div>
                            </div>
                            <div class="mt-2 preserve-whitespace">
                                ${reply.description}
                            </div>
                        </div>
                    </div>
                `;
                $('#replyList').prepend(replyHtml);
            }
        });

    </script>
}
<div class="modal fade" id="replyModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content" id="replyModalContent">
        </div>
    </div>
</div>